<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Chunks' => 
    array (
      '397718a6a61fd10f163bbd4e0e0f5bb1' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"sbswhyDialogTextTpl","description":"Text for Subscribe Why Dialog","editor_type":0,"category":0,"cache_type":0,"snippet":"<h3>Why Subscribe?<\\/h3>\\r\\n\\r\\n<p>As a Subscriber, you will receive access to certain parts\\r\\nof the site that are hidden from others. You\'ll also get\\r\\nemail updates when new content is available\\r\\non the site or existing content is updated.<\\/p>\\r\\n\\r\\n<p>When logged in, you\'ll no longer see this request to\\r\\nsubscribe.<\\/p>\\r\\n\\r\\n<p>As an added incentive to subscribe, I have a bunch\\r\\nof new and updated MODX extras I plan to release\\r\\nas soon as I have a significant number of subscribers\\r\\nto notify.<\\/p>","locked":0,"properties":"","static":0,"static_file":"","content":"<h3>Why Subscribe?<\\/h3>\\r\\n\\r\\n<p>As a Subscriber, you will receive access to certain parts\\r\\nof the site that are hidden from others. You\'ll also get\\r\\nemail updates when new content is available\\r\\non the site or existing content is updated.<\\/p>\\r\\n\\r\\n<p>When logged in, you\'ll no longer see this request to\\r\\nsubscribe.<\\/p>\\r\\n\\r\\n<p>As an added incentive to subscribe, I have a bunch\\r\\nof new and updated MODX extras I plan to release\\r\\nas soon as I have a significant number of subscribers\\r\\nto notify.<\\/p>"}',
        'guid' => '93255213ca3e1de9588b2437b6d3673a',
        'native_key' => 1,
        'signature' => '68bee70cf85645561d251726929d59bd',
      ),
      '981c957d2052080de0bea674b552a953' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":2,"source":0,"property_preprocess":0,"name":"sbsPrivacyDialogTextTpl","description":"Text for Subscribe Privacy Policy dialog","editor_type":0,"category":0,"cache_type":0,"snippet":"<h3>Privacy Policy<\\/h3>\\r\\n\\r\\n<p>I\'m too lazy to collect any information about you other\\r\\nthan the data you submit when you subscribe, which I will\\r\\nnever intentionally share with anyone.<\\/p>\\r\\n\\r\\n<p>As usual, Google and other entities may also collect\\r\\ninformation about you during your visit.<\\/p>\\r\\n\\r\\n<p>If this policy changes, I\'ll let you know.<\\/p>\\r\\n","locked":0,"properties":"","static":0,"static_file":"","content":"<h3>Privacy Policy<\\/h3>\\r\\n\\r\\n<p>I\'m too lazy to collect any information about you other\\r\\nthan the data you submit when you subscribe, which I will\\r\\nnever intentionally share with anyone.<\\/p>\\r\\n\\r\\n<p>As usual, Google and other entities may also collect\\r\\ninformation about you during your visit.<\\/p>\\r\\n\\r\\n<p>If this policy changes, I\'ll let you know.<\\/p>\\r\\n"}',
        'guid' => 'a891d36d367f148916bb9aa93acde28c',
        'native_key' => 2,
        'signature' => 'b0e5ee1865cc2cfef21077ea4d9d4c44',
      ),
      '0692dd2b9fdcc777755360f75d719369' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":3,"source":0,"property_preprocess":0,"name":"sbsWhyDialogTpl","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<div id=\\"why-dialog\\" style=\\"display:none\\">\\r\\n    [[$sbsWhyDialogTextTpl]]\\r\\n    <div style=\\"text-align:center\\">\\r\\n        <button onclick=\\"sbs_close(\'why-dialog\');\\">[[%sbs_close_button_text]]<\\/button>\\r\\n    <\\/div>\\r\\n<\\/div>\\r\\n","locked":0,"properties":"","static":0,"static_file":"","content":"<div id=\\"why-dialog\\" style=\\"display:none\\">\\r\\n    [[$sbsWhyDialogTextTpl]]\\r\\n    <div style=\\"text-align:center\\">\\r\\n        <button onclick=\\"sbs_close(\'why-dialog\');\\">[[%sbs_close_button_text]]<\\/button>\\r\\n    <\\/div>\\r\\n<\\/div>\\r\\n"}',
        'guid' => '68e3ace59dfa33916896f44d24529d1d',
        'native_key' => 3,
        'signature' => 'f591ff5369c926617ddf84d79f1ed819',
      ),
      '8164671e18f0b857a6ffb627b4dbf9c1' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":4,"source":0,"property_preprocess":0,"name":"sbsPrivacyDialogTpl","description":"Subscribe Tpl chunk for Privacy Policy dialog","editor_type":0,"category":0,"cache_type":0,"snippet":"<div id=\\"privacy-dialog\\" style=\\"display:none\\">\\r\\n    [[$sbsPrivacyDialogTextTpl]]\\r\\n    <div style=\\"text-align:center\\">\\r\\n        <button onclick=\\"sbs_close(\'privacy-dialog\');\\">[[%sbs_close_button_text]]<\\/button>\\r\\n    <\\/div>\\r\\n<\\/div>\\r\\n","locked":0,"properties":"","static":0,"static_file":"","content":"<div id=\\"privacy-dialog\\" style=\\"display:none\\">\\r\\n    [[$sbsPrivacyDialogTextTpl]]\\r\\n    <div style=\\"text-align:center\\">\\r\\n        <button onclick=\\"sbs_close(\'privacy-dialog\');\\">[[%sbs_close_button_text]]<\\/button>\\r\\n    <\\/div>\\r\\n<\\/div>\\r\\n"}',
        'guid' => 'a7c4ce22dcdcefcf0dc188029807c176',
        'native_key' => 4,
        'signature' => '1ed2ff49fb3cc81e87c97d2a9b94bf50',
      ),
      '9e188923c779a23a9744c3b0bba56dac' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":5,"source":0,"property_preprocess":0,"name":"sbsLoggedOutDisplayTpl","description":"Subscribe extra display for users who are not logged in","editor_type":0,"category":0,"cache_type":0,"snippet":"<script type=\\"text\\/javascript\\">\\r\\n\\/* <![CDATA[ *\\/\\r\\n    function sbs_toggle(id) {\\r\\n       var e = document.getElementById(id);\\r\\n    \\/* close the other div *\\/\\r\\n    var t;\\r\\n    if (id == \'why-dialog\') {\\r\\n        t = document.getElementById(\'privacy-dialog\');\\r\\n        t.style.display = \'none\';\\r\\n    } else if (id == \'privacy-dialog\') {\\r\\n        t = document.getElementById(\'why-dialog\');\\r\\n        t.style.display = \'none\';\\r\\n    }\\r\\n    \\/* toggle selected div *\\/\\r\\n    if(e.style.display == \'block\')\\r\\n      e.style.display = \'none\';\\r\\n    else\\r\\n      e.style.display = \'block\';\\r\\n    }\\r\\nfunction sbs_close(id) {\\r\\n   var t = document.getElementById(id);\\r\\n   t.style.display = \'none\';\\r\\n\\r\\n}\\r\\n\\/* ]]> *\\/\\r\\n<\\/script>\\r\\n\\r\\n      [[$sbsWhyDialogTpl]]\\r\\n      [[$sbsPrivacyDialogTpl]]\\r\\n<div id=\\"sbs_subscribe\\">\\r\\n    <span id=\\"sbs_subscribe_link\\"><a href=\\"[[~[[++sbs_register_page_id]]]]\\">Become a subscriber!<\\/a><\\/span>\\r\\n    <span id=\\"launch-why-dialog\\" onclick=\\"sbs_toggle(\'why-dialog\');\\"><a>Why Should I?<\\/a><\\/span>\\r\\n    <span id=\\"launch-privacy-dialog\\" onclick=\\"sbs_toggle(\'privacy-dialog\');\\"><a>Privacy Policy<\\/a><\\/span>\\r\\n    <span id=\\"sbs_login_link\\"><a href=\\"[[~[[++sbs_login_page_id]]]]\\">Login<\\/a><\\/span>\\r\\n<\\/div>","locked":0,"properties":"","static":0,"static_file":"","content":"<script type=\\"text\\/javascript\\">\\r\\n\\/* <![CDATA[ *\\/\\r\\n    function sbs_toggle(id) {\\r\\n       var e = document.getElementById(id);\\r\\n    \\/* close the other div *\\/\\r\\n    var t;\\r\\n    if (id == \'why-dialog\') {\\r\\n        t = document.getElementById(\'privacy-dialog\');\\r\\n        t.style.display = \'none\';\\r\\n    } else if (id == \'privacy-dialog\') {\\r\\n        t = document.getElementById(\'why-dialog\');\\r\\n        t.style.display = \'none\';\\r\\n    }\\r\\n    \\/* toggle selected div *\\/\\r\\n    if(e.style.display == \'block\')\\r\\n      e.style.display = \'none\';\\r\\n    else\\r\\n      e.style.display = \'block\';\\r\\n    }\\r\\nfunction sbs_close(id) {\\r\\n   var t = document.getElementById(id);\\r\\n   t.style.display = \'none\';\\r\\n\\r\\n}\\r\\n\\/* ]]> *\\/\\r\\n<\\/script>\\r\\n\\r\\n      [[$sbsWhyDialogTpl]]\\r\\n      [[$sbsPrivacyDialogTpl]]\\r\\n<div id=\\"sbs_subscribe\\">\\r\\n    <span id=\\"sbs_subscribe_link\\"><a href=\\"[[~[[++sbs_register_page_id]]]]\\">Become a subscriber!<\\/a><\\/span>\\r\\n    <span id=\\"launch-why-dialog\\" onclick=\\"sbs_toggle(\'why-dialog\');\\"><a>Why Should I?<\\/a><\\/span>\\r\\n    <span id=\\"launch-privacy-dialog\\" onclick=\\"sbs_toggle(\'privacy-dialog\');\\"><a>Privacy Policy<\\/a><\\/span>\\r\\n    <span id=\\"sbs_login_link\\"><a href=\\"[[~[[++sbs_login_page_id]]]]\\">Login<\\/a><\\/span>\\r\\n<\\/div>"}',
        'guid' => 'cc583d0f6c14fea0e63cf222c13d7894',
        'native_key' => 5,
        'signature' => '784336358b03869b2063ea36de2cc599',
      ),
      '24102164e695608e81cb51cca40eb40c' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":6,"source":0,"property_preprocess":0,"name":"sbsLoggedInDisplayTpl","description":"Displays Logout and Manage Preferences buttons for Subscribe extra","editor_type":0,"category":0,"cache_type":0,"snippet":"<div id=\\"sbs_subscribe\\">\\r\\n    <span id=\\"sbs_logout_link\\"><a href=\\"[[~[[++sbs_login_page_id]]]]&service=logout\\">[[%sbs_logout_button_text]]<\\/a><\\/span>\\r\\n    <span id=\\"sbs_manage_prefs_link\\"><a href=\\"[[~[[++sbs_manage_prefs_page_id]]]]\\">[[%sbs_manage_prefs_button_text]]<\\/a><\\/span><br \\/>\\r\\n<\\/div>\\r\\n","locked":0,"properties":"","static":0,"static_file":"","content":"<div id=\\"sbs_subscribe\\">\\r\\n    <span id=\\"sbs_logout_link\\"><a href=\\"[[~[[++sbs_login_page_id]]]]&service=logout\\">[[%sbs_logout_button_text]]<\\/a><\\/span>\\r\\n    <span id=\\"sbs_manage_prefs_link\\"><a href=\\"[[~[[++sbs_manage_prefs_page_id]]]]\\">[[%sbs_manage_prefs_button_text]]<\\/a><\\/span><br \\/>\\r\\n<\\/div>\\r\\n"}',
        'guid' => 'b95853f026b674bc1e19e61ee4d350bb',
        'native_key' => 6,
        'signature' => '3ad1099a8303ff05ceacdf18afe5244b',
      ),
      'e26debfcc8a54a59be0af5cc4a59b733' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":7,"source":0,"property_preprocess":0,"name":"sbsRegisterFormTpl","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"[[!SubscribeForm?\\r\\n    &form=`register`\\r\\n]]\\r\\n[[!Register?\\r\\n    &form=`register`\\r\\n    &submitVar=`login-register-btn`\\r\\n    &activationResourceId=`[[++sbs_confirm_register_page_id]]`\\r\\n    &submittedResourceId=`[[++sbs_thank_you_page_id]]`\\r\\n    &postHooks=`SubscribeForm`\\r\\n    &activationttl=`480`\\r\\n    &usergroups=`Subscribers:Subscriber`\\r\\n    &useExtended=`0`\\r\\n    &activationEmailTpl=`sbsActivationEmailTpl`\\r\\n    &activationEmailSubject=`Please activate your account at [[++site_name]]!`\\r\\n    &validate=`nospam:blank,\\r\\n         username:required:minLength=^6^,\\r\\n         password:required:minLength=^6^,\\r\\n         password_confirm:password_confirm=^password^,\\r\\n         email:required:email`\\r\\n]]\\r\\n\\r\\n<div class=\\"register\\">\\r\\n    <div class=\\"registerMessage\\">[[+error.message]]<\\/div>\\r\\n\\r\\n    <form class=\\"sbs_register_form\\" action=\\"[[~[[*id]]]]\\" method=\\"post\\" onsubmit=\\"return checkform(this); return false;\\">\\r\\n        <fieldset>\\r\\n        <input type=\\"hidden\\" name=\\"nospam\\" value=\\"[[!+reg.nospam]]\\" \\/>\\r\\n        <label for=\\"username\\">[[!%register.username? &namespace=`login` &topic=`register`]]:\\r\\n            \\r\\n        <\\/label>\\r\\n        <input type=\\"text\\" name=\\"username\\" id=\\"username\\" value=\\"[[+username]]\\" \\/><span class=\\"error\\">[[+error.username]]<\\/span><br \\/>\\r\\n\\r\\n        <label for=\\"password\\">[[!%register.password]]:\\r\\n            \\r\\n        <\\/label>\\r\\n        <input type=\\"password\\" name=\\"password\\" id=\\"password\\" value=\\"[[!+reg.password]]\\" \\/><span class=\\"error\\">[[+error.password]]<\\/span><br \\/>\\r\\n\\r\\n        <label for=\\"password_confirm\\">[[!%register.password_confirm]]:\\r\\n            \\r\\n        <\\/label>\\r\\n        <input type=\\"password\\" name=\\"password_confirm\\" id=\\"password_confirm\\" value=\\"[[Q+reg.password_confirm]]\\" \\/><span class=\\"error\\">[[+error.password_confirm]]<\\/span><br \\/>\\r\\n\\r\\n        <label for=\\"fullname\\">[[!%register.fullname]]:\\r\\n            \\r\\n        <\\/label>\\r\\n        <input type=\\"text\\" name=\\"fullname\\" id=\\"fullname\\" value=\\"[[!+reg.fullname]]\\" \\/><span class=\\"error\\">[[+error.fullname]]<\\/span><br \\/>\\r\\n\\r\\n        <label for=\\"email\\">[[!%register.email]]:\\r\\n            \\r\\n        <\\/label>\\r\\n        <input type=\\"text\\" name=\\"email\\" id=\\"email\\" value=\\"[[!+reg.email]]\\" \\/><span class=\\"error\\">[[+error.email]]<\\/span><br \\/>\\r\\n\\r\\n            <br class=\\"clear\\"\\/>\\r\\n\\r\\n            [[+sbs_interests_caption]]\\r\\n            [[+sbs_interest_list]]\\r\\n\\r\\n            <br class=\\"clear\\"\\/>\\r\\n\\r\\n            [[+sbs_groups_caption]]\\r\\n            [[+sbs_groups_list]]\\r\\n\\r\\n            <br class=\\"clear\\"\\/>\\r\\n\\r\\n        [[+register.recaptcha_html]]\\r\\n        [[+error.recaptcha]]\\r\\n        <br \\/>\\r\\n        <div class=\\"form-buttons\\">\\r\\n            <input type=\\"submit\\" name=\\"login-register-btn\\" value=\\"[[!%sbs_submit_button_text]]\\" \\/>\\r\\n        <\\/div>\\r\\n    <\\/fieldset>\\r\\n    <\\/form>\\r\\n    <span id=\\"sbs_js_lexicon\\" style=\\"display:none\\">[[+sbs_lexicon_json]]<\\/span>\\r\\n<\\/div>","locked":0,"properties":"","static":0,"static_file":"","content":"[[!SubscribeForm?\\r\\n    &form=`register`\\r\\n]]\\r\\n[[!Register?\\r\\n    &form=`register`\\r\\n    &submitVar=`login-register-btn`\\r\\n    &activationResourceId=`[[++sbs_confirm_register_page_id]]`\\r\\n    &submittedResourceId=`[[++sbs_thank_you_page_id]]`\\r\\n    &postHooks=`SubscribeForm`\\r\\n    &activationttl=`480`\\r\\n    &usergroups=`Subscribers:Subscriber`\\r\\n    &useExtended=`0`\\r\\n    &activationEmailTpl=`sbsActivationEmailTpl`\\r\\n    &activationEmailSubject=`Please activate your account at [[++site_name]]!`\\r\\n    &validate=`nospam:blank,\\r\\n         username:required:minLength=^6^,\\r\\n         password:required:minLength=^6^,\\r\\n         password_confirm:password_confirm=^password^,\\r\\n         email:required:email`\\r\\n]]\\r\\n\\r\\n<div class=\\"register\\">\\r\\n    <div class=\\"registerMessage\\">[[+error.message]]<\\/div>\\r\\n\\r\\n    <form class=\\"sbs_register_form\\" action=\\"[[~[[*id]]]]\\" method=\\"post\\" onsubmit=\\"return checkform(this); return false;\\">\\r\\n        <fieldset>\\r\\n        <input type=\\"hidden\\" name=\\"nospam\\" value=\\"[[!+reg.nospam]]\\" \\/>\\r\\n        <label for=\\"username\\">[[!%register.username? &namespace=`login` &topic=`register`]]:\\r\\n            \\r\\n        <\\/label>\\r\\n        <input type=\\"text\\" name=\\"username\\" id=\\"username\\" value=\\"[[+username]]\\" \\/><span class=\\"error\\">[[+error.username]]<\\/span><br \\/>\\r\\n\\r\\n        <label for=\\"password\\">[[!%register.password]]:\\r\\n            \\r\\n        <\\/label>\\r\\n        <input type=\\"password\\" name=\\"password\\" id=\\"password\\" value=\\"[[!+reg.password]]\\" \\/><span class=\\"error\\">[[+error.password]]<\\/span><br \\/>\\r\\n\\r\\n        <label for=\\"password_confirm\\">[[!%register.password_confirm]]:\\r\\n            \\r\\n        <\\/label>\\r\\n        <input type=\\"password\\" name=\\"password_confirm\\" id=\\"password_confirm\\" value=\\"[[Q+reg.password_confirm]]\\" \\/><span class=\\"error\\">[[+error.password_confirm]]<\\/span><br \\/>\\r\\n\\r\\n        <label for=\\"fullname\\">[[!%register.fullname]]:\\r\\n            \\r\\n        <\\/label>\\r\\n        <input type=\\"text\\" name=\\"fullname\\" id=\\"fullname\\" value=\\"[[!+reg.fullname]]\\" \\/><span class=\\"error\\">[[+error.fullname]]<\\/span><br \\/>\\r\\n\\r\\n        <label for=\\"email\\">[[!%register.email]]:\\r\\n            \\r\\n        <\\/label>\\r\\n        <input type=\\"text\\" name=\\"email\\" id=\\"email\\" value=\\"[[!+reg.email]]\\" \\/><span class=\\"error\\">[[+error.email]]<\\/span><br \\/>\\r\\n\\r\\n            <br class=\\"clear\\"\\/>\\r\\n\\r\\n            [[+sbs_interests_caption]]\\r\\n            [[+sbs_interest_list]]\\r\\n\\r\\n            <br class=\\"clear\\"\\/>\\r\\n\\r\\n            [[+sbs_groups_caption]]\\r\\n            [[+sbs_groups_list]]\\r\\n\\r\\n            <br class=\\"clear\\"\\/>\\r\\n\\r\\n        [[+register.recaptcha_html]]\\r\\n        [[+error.recaptcha]]\\r\\n        <br \\/>\\r\\n        <div class=\\"form-buttons\\">\\r\\n            <input type=\\"submit\\" name=\\"login-register-btn\\" value=\\"[[!%sbs_submit_button_text]]\\" \\/>\\r\\n        <\\/div>\\r\\n    <\\/fieldset>\\r\\n    <\\/form>\\r\\n    <span id=\\"sbs_js_lexicon\\" style=\\"display:none\\">[[+sbs_lexicon_json]]<\\/span>\\r\\n<\\/div>"}',
        'guid' => '46ea60e296bfc4ef4e500c501e33e956',
        'native_key' => 7,
        'signature' => 'e3bbfe487baf63c56b8d3a397a4f449a',
      ),
      'f8b658020d088ff9ecb81331d173f62b' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":8,"source":0,"property_preprocess":0,"name":"sbsPrefListTpl","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"MODX==modx||Developer Resources==developer||RV==rv||Bread==bread||Language==language||Humor==humor||Stuff you might want==stuff","locked":0,"properties":"","static":0,"static_file":"","content":"MODX==modx||Developer Resources==developer||RV==rv||Bread==bread||Language==language||Humor==humor||Stuff you might want==stuff"}',
        'guid' => '7eda758ad42916b317b3265659f09c55',
        'native_key' => 8,
        'signature' => 'd80d3a03a2148e0c6d6ca772602ddfd7',
      ),
      '8e0608060fa9e44368dc79c45a68f196' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":9,"source":0,"property_preprocess":0,"name":"sbsGroupListTpl","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"User Group One==group1||User Group Two==group2","locked":0,"properties":"","static":0,"static_file":"","content":"User Group One==group1||User Group Two==group2"}',
        'guid' => '7b474decb687842ea67693ce29b694d3',
        'native_key' => 9,
        'signature' => 'e6876d75fd312fe9e633517a66878cca',
      ),
      '2d642288a4c140ddb7f9ca0f3a92dcd0' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":10,"source":0,"property_preprocess":0,"name":"sbsCheckboxTpl","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<input type=\\"checkbox\\" name=\\"[[+fieldName]][]\\" value=\\"[[+sbs_value]]\\" [[+sbs_checked]] \\/>[[+sbs_caption]]<br \\/>","locked":0,"properties":"","static":0,"static_file":"","content":"<input type=\\"checkbox\\" name=\\"[[+fieldName]][]\\" value=\\"[[+sbs_value]]\\" [[+sbs_checked]] \\/>[[+sbs_caption]]<br \\/>"}',
        'guid' => '34e744ef9614fdb42bc7bd69a4944552',
        'native_key' => 10,
        'signature' => '9674bbbd5a815ccf03b830a45d2a62e5',
      ),
      'aef332d614e2dd2896ca067e0c175448' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":11,"source":0,"property_preprocess":0,"name":"sbsManagePrefsFormTpl","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<p>Submit the following form to change your preferences.<\\/p>\\r\\n[[!SubscribeForm?\\r\\n    &form=`managePrefs`\\r\\n]]\\r\\n[[!+sbs_error_message:notempty=`<div class=\\"sbs_error\\">[[!+sbs_error_message]]<\\/div>`]]\\r\\n[[!+sbs_success_message:notempty=`<div class=\\"sbs_success\\">[[+sbs_success_message]]<\\/div>` ]]\\r\\n\\r\\n<div class=\\"register\\">\\r\\n    <div class=\\"registerMessage\\">[[+error.message]]<\\/div>\\r\\n\\r\\n    <form class=\\"sbs_register_form\\" action=\\"[[~[[*id]]]]\\" method=\\"post\\" onsubmit=\\"return checkform(this); return false;\\">\\r\\n        <fieldset>\\r\\n            <input type=\\"hidden\\" name=\\"nospam:blank\\" value=\\"\\"\\/>\\r\\n            <p>Username: [[+sbs_username]]<\\/p>\\r\\n\\r\\n            <br class=\\"clear\\"\\/>\\r\\n\\r\\n            [[+sbs_interests_caption]]\\r\\n            [[+sbs_interest_list]]\\r\\n\\r\\n            <br class=\\"clear\\"\\/>\\r\\n\\r\\n            [[+sbs_groups_caption]]\\r\\n            [[+sbs_groups_list]]\\r\\n\\r\\n            <br class=\\"clear\\"\\/>\\r\\n            <input type=\\"checkbox\\" id=\\"unsubscribe\\" name=\\"unsubscribe\\" value=\\"sbs_unsubscribe\\"\\/>[[!%sbs_unsubscribe]]<br\\/>\\r\\n            <br class=\\"clear\\"\\/>\\r\\n\\r\\n            <div class=\\"form-buttons\\">\\r\\n                <input type=\\"submit\\" name=\\"change_prefs_btn\\" value=\\"[[!%sbs_submit_button_text]]\\"\\/>\\r\\n            <\\/div>\\r\\n        <\\/fieldset>\\r\\n    <\\/form>\\r\\n    <span id=\\"sbs_js_lexicon\\" style=\\"display:none\\">[[+sbs_lexicon_json]]<\\/span>\\r\\n<\\/div>","locked":0,"properties":"","static":0,"static_file":"","content":"<p>Submit the following form to change your preferences.<\\/p>\\r\\n[[!SubscribeForm?\\r\\n    &form=`managePrefs`\\r\\n]]\\r\\n[[!+sbs_error_message:notempty=`<div class=\\"sbs_error\\">[[!+sbs_error_message]]<\\/div>`]]\\r\\n[[!+sbs_success_message:notempty=`<div class=\\"sbs_success\\">[[+sbs_success_message]]<\\/div>` ]]\\r\\n\\r\\n<div class=\\"register\\">\\r\\n    <div class=\\"registerMessage\\">[[+error.message]]<\\/div>\\r\\n\\r\\n    <form class=\\"sbs_register_form\\" action=\\"[[~[[*id]]]]\\" method=\\"post\\" onsubmit=\\"return checkform(this); return false;\\">\\r\\n        <fieldset>\\r\\n            <input type=\\"hidden\\" name=\\"nospam:blank\\" value=\\"\\"\\/>\\r\\n            <p>Username: [[+sbs_username]]<\\/p>\\r\\n\\r\\n            <br class=\\"clear\\"\\/>\\r\\n\\r\\n            [[+sbs_interests_caption]]\\r\\n            [[+sbs_interest_list]]\\r\\n\\r\\n            <br class=\\"clear\\"\\/>\\r\\n\\r\\n            [[+sbs_groups_caption]]\\r\\n            [[+sbs_groups_list]]\\r\\n\\r\\n            <br class=\\"clear\\"\\/>\\r\\n            <input type=\\"checkbox\\" id=\\"unsubscribe\\" name=\\"unsubscribe\\" value=\\"sbs_unsubscribe\\"\\/>[[!%sbs_unsubscribe]]<br\\/>\\r\\n            <br class=\\"clear\\"\\/>\\r\\n\\r\\n            <div class=\\"form-buttons\\">\\r\\n                <input type=\\"submit\\" name=\\"change_prefs_btn\\" value=\\"[[!%sbs_submit_button_text]]\\"\\/>\\r\\n            <\\/div>\\r\\n        <\\/fieldset>\\r\\n    <\\/form>\\r\\n    <span id=\\"sbs_js_lexicon\\" style=\\"display:none\\">[[+sbs_lexicon_json]]<\\/span>\\r\\n<\\/div>"}',
        'guid' => '156691871ebffafad18f97abbd09d456',
        'native_key' => 11,
        'signature' => 'e895a38a740b35eec2328cd28c8f705d',
      ),
      'a1dedee894f80758974e450ce886d1dc' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":12,"source":0,"property_preprocess":0,"name":"sbsActivationEmailTpl","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<p>[[+username]],<\\/p>\\r\\n\\r\\n<p>Thanks for registering at [[++site_name]]! To activate your new account, please click on the following link:<\\/p>\\r\\n\\r\\n<p><a href=\\"[[+confirmUrl]]\\">[[+confirmUrl]]<\\/a><\\/p>\\r\\n\\r\\n<p>After activating, you may login with your password and username:<\\/p>\\r\\n\\r\\n<p>\\r\\nUsername: <strong>[[+username]]<\\/strong><br \\/>\\r\\nPassword: <strong>[[+password]]<\\/strong><\\/p>\\r\\n\\r\\n<p>If you did not request this message, please ignore it.<\\/p>\\r\\n\\r\\n<p>Thanks,<br \\/>\\r\\n<em>[[++site_name]] Administrator<\\/em><\\/p>","locked":0,"properties":"","static":0,"static_file":"","content":"<p>[[+username]],<\\/p>\\r\\n\\r\\n<p>Thanks for registering at [[++site_name]]! To activate your new account, please click on the following link:<\\/p>\\r\\n\\r\\n<p><a href=\\"[[+confirmUrl]]\\">[[+confirmUrl]]<\\/a><\\/p>\\r\\n\\r\\n<p>After activating, you may login with your password and username:<\\/p>\\r\\n\\r\\n<p>\\r\\nUsername: <strong>[[+username]]<\\/strong><br \\/>\\r\\nPassword: <strong>[[+password]]<\\/strong><\\/p>\\r\\n\\r\\n<p>If you did not request this message, please ignore it.<\\/p>\\r\\n\\r\\n<p>Thanks,<br \\/>\\r\\n<em>[[++site_name]] Administrator<\\/em><\\/p>"}',
        'guid' => '726c1f05851c9427873df74494bf9b5d',
        'native_key' => 12,
        'signature' => 'ea88ec2e0843d12c4ba38d636f58e1f8',
      ),
      '9923b2dee5dc461930b56cdd1c99179c' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":13,"source":0,"property_preprocess":0,"name":"sbsUserNotFoundTpl","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<p>Sorry, we were unable to find you in the user database.<\\/p>\\n\\n<p>Please contact the site administrator.<\\/p>","locked":0,"properties":"","static":0,"static_file":"","content":"<p>Sorry, we were unable to find you in the user database.<\\/p>\\n\\n<p>Please contact the site administrator.<\\/p>"}',
        'guid' => '2e8eb2c9c531f310e66d19b60c1a81b2',
        'native_key' => 13,
        'signature' => '5d76d91658ca7284cc0584502a2a4bff',
      ),
    ),
    'Snippets' => 
    array (
      '36d9caf05c5698ea57c7bc6b33c3be1c' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"SubscribeRequest","description":"Displays request-to-subscribe or manage prefs\\/logout for Subscribe extra.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/** \\r\\n * Subscribe\\r\\n * Copyright 2012 Bob Ray <http:\\/\\/bobsguides\\/com>\\r\\n *\\r\\n * Subscribe is free software; you can redistribute it and\\/or modify it\\r\\n * under the terms of the GNU General Public License as published by the Free\\r\\n * Software Foundation; either version 2 of the License, or (at your option) any\\r\\n * later version.\\r\\n *\\r\\n * Subscribe is distributed in the hope that it will be useful, but WITHOUT ANY\\r\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\r\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\r\\n *\\r\\n * You should have received a copy of the GNU General Public License along with\\r\\n * Subscribe; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\r\\n * Suite 330, Boston, MA 02111-1307 USA\\r\\n *\\r\\n * @package subscribe\\r\\n * @author Bob Ray <http:\\/\\/bobsguides\\/com>\\r\\n *\\r\\n * @version Version 1.0.0 Beta-1\\r\\n * 3\\/3\\/12\\r\\n *\\r\\n * @Description Display request to subscribe unless user is admin or logged in *\\/\\r\\n\\r\\n\\r\\n\\/**\\r\\n * @version Version 1.0.0 Beta-1\\r\\n * @package subscribe\\r\\n *\\/\\r\\n\\r\\n\\r\\n\\/* Display request to subscribe unless user is admin or logged in *\\/\\r\\n\\/* @var $modx modX *\\/\\r\\n\\/* @var $scriptProperties array *\\/\\r\\n\\r\\n\\/* Properties\\r\\n *\\r\\n * &registerPageId int (required) ID of Subscribe register form\\r\\n *\\r\\n * managePrefsPageId int (required) ID of Manage Prererences page\\r\\n *\\r\\n * &login page ID int (required) ID of Login page\\r\\n *\\r\\n * &sbsCssPath string\\r\\n *      default: MODX_ASSETS_PATH .components\\/subscribe\\/css\\/\\r\\n *\\r\\n *  &sbsCssFile string\\r\\n *      default: subscribe.css\\r\\n *\\r\\n * &whyDialogTpl string Tpl chunk for Why Subscribe dialog\\r\\n *      default: sbsWhyDialogTpl\\r\\n *\\r\\n * &whyDialogTextTpl string Tpl chunk for Why dialog text\\r\\n *      default: sbsWhyDialogTextTpl\\r\\n *\\r\\n * &privacyDialogTpl string Tpl chunk for Privacy dialog\\r\\n *      default: sbsPrivacyDialogTpl\\r\\n *\\r\\n * &privacyDialogTextTpl string Tpl chunk for Privacy dialog text\\r\\n *      default: sbsPrivacyDialogTextTpl\\r\\n * \\r\\n *  &language string language to use for buttons and messages\\r\\n *      default: en\\r\\n *\\r\\n * *\\/\\r\\nif (! function_exists(\'setSystemSettings\')) {\\r\\nfunction setSystemSettings(&$modx) {\\r\\n    \\/* @var $modx modX *\\/\\r\\n    \\/* @var $parent modResource *\\/\\r\\n    $parent = $modx->getObject(\'modResource\', array(\'alias\' => \'subscribe-folder\'));\\r\\n    $parentId = 0;\\r\\n    if ($parent) {\\r\\n        $parentId = $parent->get(\'id\');\\r\\n    } else {\\r\\n        $modx->log(MODX::LOG_LEVEL_ERROR, \'Failed to retrieve Parent with alias: subscribe-folder\');\\r\\n    }\\r\\n    $settings = array(\\r\\n        \'sbs_login_page_id\' =>\'login\',\\r\\n        \'sbs_confirm_register_page_id\' => \'confirm-register\',\\r\\n        \'sbs_manage_prefs_page_id\' => \'manage-preferences\',\\r\\n        \'sbs_register_page_id\' => \'subscribe\',\\r\\n        \'sbs_thank_you_page_id\' => \'thanks-for-registering\',\\r\\n    );\\r\\n    foreach ($settings as $key => $value) {\\r\\n        \\/* @var $resObj modResource *\\/\\r\\n        \\/* @var $setting modSystemSetting *\\/\\r\\n        $resObj = $modx->getObject(\'modResource\', array(\'alias\' => $value));\\r\\n        $setting = $modx->getObject(\'modSystemSetting\', array(\'key\' => $key));\\r\\n        if (! $resObj) {\\r\\n            $modx->log(MODX::LOG_LEVEL_ERROR, \'Failed to retrieve Resource with alias: \' . $value);\\r\\n        }\\r\\n        if (! $setting) {\\r\\n            $modx->log(MODX::LOG_LEVEL_ERROR, \'Failed to retrieve System Setting with key: \' . $key);\\r\\n        }\\r\\n        if ($resObj && $setting && $parentId) {\\r\\n            $resObj->set(\'parent\',$parentId);\\r\\n            $resObj->save();\\r\\n            $setting->set(\'value\', $resObj->get(\'id\'));\\r\\n            $setting->save();\\r\\n        }\\r\\n    }\\r\\n}\\r\\n}\\r\\n$ss = $modx->getOption(\'sbs_login_page_id\',null);\\r\\n\\r\\nif ($ss == \'999\') {\\r\\n    setSystemSettings($modx);\\r\\n}\\r\\n$sp =& $scriptProperties;\\r\\n$docId = $modx->resource->get(\'id\');\\r\\n\\r\\n$assetsUrl = $modx->getOption(\'subscribe.assets_url\', $sp, MODX_ASSETS_URL . \'components\\/subscribe\\/\');\\r\\n$cssPath = $modx->getOption(\'sbsCssPath\',$sp, $assetsUrl . \'css\\/\' ) ;\\r\\n$cssFile = $modx->getOption(\'sbsCssFile\', $sp, null);\\r\\n$cssFile = empty($cssFile) ? \'subscribe.css\' : $cssFile;\\r\\n\\r\\n\\/* by default, don\'t show on these pages *\\/\\r\\n$noShows = array(\\r\\n    $modx->getOption(\'sbs_login_page_id\',$sp,null),\\r\\n    $modx->getOption(\'sbs_register_page_id\',$sp,null),\\r\\n    $modx->getOption(\'sbs_manage_prefs_page_id\',$sp,null),\\r\\n    $modx->getOption(\'sbs_thank_you_page_id\',$sp,null),\\r\\n    $modx->getOption(\'sbs_confirm_register_page_id\',$sp,null),\\r\\n);\\r\\n\\r\\n\\/* add in other pages from &noShows property *\\/\\r\\n$noShows = empty( $sp[\'noShows\'])? $noShows : array_merge($noShows, explode(\',\', $sp[\'noShows\']));\\r\\n\\r\\n\\/* load language strings *\\/\\r\\n$language = !empty($scriptProperties[\'language\'])\\r\\n    ? $scriptProperties[\'language\']\\r\\n    : $modx->getOption(\'cultureKey\', null, $modx->getOption(\'manager_language\', null, \'en\'));\\r\\n$language = empty($language) ? \'en\' : $language;\\r\\n$modx->lexicon->load($language . \':subscribe:default\');\\r\\n\\r\\n\\/* set Tpl chunks *\\/\\r\\n\\r\\n$loggedOutDisplayTpl = $modx->getOption(\'loggedOutDisplayTpl\', $sp, null);\\r\\n$loggedOutDisplayTpl = empty($loggedOutDisplayTpl) ? \'sbsLoggedOutDisplayTpl\' : $loggedOutDisplayTpl;\\r\\n\\r\\n$loggedInDisplayTpl = $modx->getOption(\'loggedInDisplayTpl\', $sp, null);\\r\\n$loggedInDisplayTpl = empty($loggedInDisplayTpl) ? \'sbsLoggedInDisplayTpl\' : $loggedInDisplayTpl;\\r\\n\\r\\n$whyDialogTpl = $modx->getOption(\'whyDialogTpl\', $sp, null);\\r\\n$whyDialogTpl = empty($whyDialogTpl) ? \'sbsWhyDialogTpl\' : $whyDialogTpl;\\r\\n\\r\\n$whyTextTpl = $modx->getOption(\'whyDialogTextTpl\', $sp, null);\\r\\n$whyTextTpl = empty($whyTextTpl) ? \'sbsWhyDialogTextTpl\' : $whyTextTpl;\\r\\n\\r\\n$privacyDialogTpl = $modx->getOption(\'privacyDialogTpl\', $sp, null);\\r\\n$privacyDialogTpl = empty($privacyDialogTpl) ? \'sbsPrivacyDialogTpl\' : $privacyDialogTpl;\\r\\n\\r\\n$privacyTextTpl = $modx->getOption(\'privacyTextTpl\', $sp, null);\\r\\n$privacyTextTpl = empty($privacyTextTpl) ? \'sbsPrivacyDialogTextTpl\' : $privacyTextTpl;\\r\\n\\r\\n\\/* see if user is logged in *\\/\\r\\n$loggedIn = $modx->user->hasSessionContext($modx->context->get(\'key\'));\\r\\n\\r\\nif (in_array($docId, $noShows)) {\\r\\n    \\/* not showing anything *\\/\\r\\n    \\/* maintains page layout - remove if necessary *\\/\\r\\n    $output = \'<br \\/>\';\\r\\n} else {\\r\\n    \\/* load CSS file unless &sbsCssPath or &sbsCssFile is set to \'none\' *\\/\\r\\n    if ($cssFile != \'none\') {\\r\\n        $modx->regClientCSS($cssPath . $cssFile);\\r\\n    }\\r\\n    if ($loggedIn) {\\r\\n        $output = $modx->getChunk($loggedInDisplayTpl);\\r\\n    } else {\\r\\n        \\/* Show logged out display *\\/\\r\\n        \\/* all set as placeholders in case user wants to move them elsewhere in template *\\/\\r\\n        $ph = array();\\r\\n        $ph[\'why_dialog_button\'] = $modx->getChunk($whyDialogTpl);\\r\\n        $ph[\'why_dialog_text\'] = $modx->getChunk($whyTextTpl);\\r\\n        $ph[\'privacy_dialog_button\'] = $modx->getChunk($privacyDialogTpl);\\r\\n        $ph[\'privacy_dialog_text\'] = $modx->getChunk($privacyTextTpl);\\r\\n\\r\\n        $modx->toPlaceholders($ph,\'sbs\', \'_\');\\r\\n\\r\\n        $output = $modx->getChunk($loggedOutDisplayTpl);\\r\\n    }\\r\\n}\\r\\n\\r\\nreturn $output;","locked":0,"properties":"","moduleguid":"","static":0,"static_file":"","content":"\\/** \\r\\n * Subscribe\\r\\n * Copyright 2012 Bob Ray <http:\\/\\/bobsguides\\/com>\\r\\n *\\r\\n * Subscribe is free software; you can redistribute it and\\/or modify it\\r\\n * under the terms of the GNU General Public License as published by the Free\\r\\n * Software Foundation; either version 2 of the License, or (at your option) any\\r\\n * later version.\\r\\n *\\r\\n * Subscribe is distributed in the hope that it will be useful, but WITHOUT ANY\\r\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\r\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\r\\n *\\r\\n * You should have received a copy of the GNU General Public License along with\\r\\n * Subscribe; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\r\\n * Suite 330, Boston, MA 02111-1307 USA\\r\\n *\\r\\n * @package subscribe\\r\\n * @author Bob Ray <http:\\/\\/bobsguides\\/com>\\r\\n *\\r\\n * @version Version 1.0.0 Beta-1\\r\\n * 3\\/3\\/12\\r\\n *\\r\\n * @Description Display request to subscribe unless user is admin or logged in *\\/\\r\\n\\r\\n\\r\\n\\/**\\r\\n * @version Version 1.0.0 Beta-1\\r\\n * @package subscribe\\r\\n *\\/\\r\\n\\r\\n\\r\\n\\/* Display request to subscribe unless user is admin or logged in *\\/\\r\\n\\/* @var $modx modX *\\/\\r\\n\\/* @var $scriptProperties array *\\/\\r\\n\\r\\n\\/* Properties\\r\\n *\\r\\n * &registerPageId int (required) ID of Subscribe register form\\r\\n *\\r\\n * managePrefsPageId int (required) ID of Manage Prererences page\\r\\n *\\r\\n * &login page ID int (required) ID of Login page\\r\\n *\\r\\n * &sbsCssPath string\\r\\n *      default: MODX_ASSETS_PATH .components\\/subscribe\\/css\\/\\r\\n *\\r\\n *  &sbsCssFile string\\r\\n *      default: subscribe.css\\r\\n *\\r\\n * &whyDialogTpl string Tpl chunk for Why Subscribe dialog\\r\\n *      default: sbsWhyDialogTpl\\r\\n *\\r\\n * &whyDialogTextTpl string Tpl chunk for Why dialog text\\r\\n *      default: sbsWhyDialogTextTpl\\r\\n *\\r\\n * &privacyDialogTpl string Tpl chunk for Privacy dialog\\r\\n *      default: sbsPrivacyDialogTpl\\r\\n *\\r\\n * &privacyDialogTextTpl string Tpl chunk for Privacy dialog text\\r\\n *      default: sbsPrivacyDialogTextTpl\\r\\n * \\r\\n *  &language string language to use for buttons and messages\\r\\n *      default: en\\r\\n *\\r\\n * *\\/\\r\\nif (! function_exists(\'setSystemSettings\')) {\\r\\nfunction setSystemSettings(&$modx) {\\r\\n    \\/* @var $modx modX *\\/\\r\\n    \\/* @var $parent modResource *\\/\\r\\n    $parent = $modx->getObject(\'modResource\', array(\'alias\' => \'subscribe-folder\'));\\r\\n    $parentId = 0;\\r\\n    if ($parent) {\\r\\n        $parentId = $parent->get(\'id\');\\r\\n    } else {\\r\\n        $modx->log(MODX::LOG_LEVEL_ERROR, \'Failed to retrieve Parent with alias: subscribe-folder\');\\r\\n    }\\r\\n    $settings = array(\\r\\n        \'sbs_login_page_id\' =>\'login\',\\r\\n        \'sbs_confirm_register_page_id\' => \'confirm-register\',\\r\\n        \'sbs_manage_prefs_page_id\' => \'manage-preferences\',\\r\\n        \'sbs_register_page_id\' => \'subscribe\',\\r\\n        \'sbs_thank_you_page_id\' => \'thanks-for-registering\',\\r\\n    );\\r\\n    foreach ($settings as $key => $value) {\\r\\n        \\/* @var $resObj modResource *\\/\\r\\n        \\/* @var $setting modSystemSetting *\\/\\r\\n        $resObj = $modx->getObject(\'modResource\', array(\'alias\' => $value));\\r\\n        $setting = $modx->getObject(\'modSystemSetting\', array(\'key\' => $key));\\r\\n        if (! $resObj) {\\r\\n            $modx->log(MODX::LOG_LEVEL_ERROR, \'Failed to retrieve Resource with alias: \' . $value);\\r\\n        }\\r\\n        if (! $setting) {\\r\\n            $modx->log(MODX::LOG_LEVEL_ERROR, \'Failed to retrieve System Setting with key: \' . $key);\\r\\n        }\\r\\n        if ($resObj && $setting && $parentId) {\\r\\n            $resObj->set(\'parent\',$parentId);\\r\\n            $resObj->save();\\r\\n            $setting->set(\'value\', $resObj->get(\'id\'));\\r\\n            $setting->save();\\r\\n        }\\r\\n    }\\r\\n}\\r\\n}\\r\\n$ss = $modx->getOption(\'sbs_login_page_id\',null);\\r\\n\\r\\nif ($ss == \'999\') {\\r\\n    setSystemSettings($modx);\\r\\n}\\r\\n$sp =& $scriptProperties;\\r\\n$docId = $modx->resource->get(\'id\');\\r\\n\\r\\n$assetsUrl = $modx->getOption(\'subscribe.assets_url\', $sp, MODX_ASSETS_URL . \'components\\/subscribe\\/\');\\r\\n$cssPath = $modx->getOption(\'sbsCssPath\',$sp, $assetsUrl . \'css\\/\' ) ;\\r\\n$cssFile = $modx->getOption(\'sbsCssFile\', $sp, null);\\r\\n$cssFile = empty($cssFile) ? \'subscribe.css\' : $cssFile;\\r\\n\\r\\n\\/* by default, don\'t show on these pages *\\/\\r\\n$noShows = array(\\r\\n    $modx->getOption(\'sbs_login_page_id\',$sp,null),\\r\\n    $modx->getOption(\'sbs_register_page_id\',$sp,null),\\r\\n    $modx->getOption(\'sbs_manage_prefs_page_id\',$sp,null),\\r\\n    $modx->getOption(\'sbs_thank_you_page_id\',$sp,null),\\r\\n    $modx->getOption(\'sbs_confirm_register_page_id\',$sp,null),\\r\\n);\\r\\n\\r\\n\\/* add in other pages from &noShows property *\\/\\r\\n$noShows = empty( $sp[\'noShows\'])? $noShows : array_merge($noShows, explode(\',\', $sp[\'noShows\']));\\r\\n\\r\\n\\/* load language strings *\\/\\r\\n$language = !empty($scriptProperties[\'language\'])\\r\\n    ? $scriptProperties[\'language\']\\r\\n    : $modx->getOption(\'cultureKey\', null, $modx->getOption(\'manager_language\', null, \'en\'));\\r\\n$language = empty($language) ? \'en\' : $language;\\r\\n$modx->lexicon->load($language . \':subscribe:default\');\\r\\n\\r\\n\\/* set Tpl chunks *\\/\\r\\n\\r\\n$loggedOutDisplayTpl = $modx->getOption(\'loggedOutDisplayTpl\', $sp, null);\\r\\n$loggedOutDisplayTpl = empty($loggedOutDisplayTpl) ? \'sbsLoggedOutDisplayTpl\' : $loggedOutDisplayTpl;\\r\\n\\r\\n$loggedInDisplayTpl = $modx->getOption(\'loggedInDisplayTpl\', $sp, null);\\r\\n$loggedInDisplayTpl = empty($loggedInDisplayTpl) ? \'sbsLoggedInDisplayTpl\' : $loggedInDisplayTpl;\\r\\n\\r\\n$whyDialogTpl = $modx->getOption(\'whyDialogTpl\', $sp, null);\\r\\n$whyDialogTpl = empty($whyDialogTpl) ? \'sbsWhyDialogTpl\' : $whyDialogTpl;\\r\\n\\r\\n$whyTextTpl = $modx->getOption(\'whyDialogTextTpl\', $sp, null);\\r\\n$whyTextTpl = empty($whyTextTpl) ? \'sbsWhyDialogTextTpl\' : $whyTextTpl;\\r\\n\\r\\n$privacyDialogTpl = $modx->getOption(\'privacyDialogTpl\', $sp, null);\\r\\n$privacyDialogTpl = empty($privacyDialogTpl) ? \'sbsPrivacyDialogTpl\' : $privacyDialogTpl;\\r\\n\\r\\n$privacyTextTpl = $modx->getOption(\'privacyTextTpl\', $sp, null);\\r\\n$privacyTextTpl = empty($privacyTextTpl) ? \'sbsPrivacyDialogTextTpl\' : $privacyTextTpl;\\r\\n\\r\\n\\/* see if user is logged in *\\/\\r\\n$loggedIn = $modx->user->hasSessionContext($modx->context->get(\'key\'));\\r\\n\\r\\nif (in_array($docId, $noShows)) {\\r\\n    \\/* not showing anything *\\/\\r\\n    \\/* maintains page layout - remove if necessary *\\/\\r\\n    $output = \'<br \\/>\';\\r\\n} else {\\r\\n    \\/* load CSS file unless &sbsCssPath or &sbsCssFile is set to \'none\' *\\/\\r\\n    if ($cssFile != \'none\') {\\r\\n        $modx->regClientCSS($cssPath . $cssFile);\\r\\n    }\\r\\n    if ($loggedIn) {\\r\\n        $output = $modx->getChunk($loggedInDisplayTpl);\\r\\n    } else {\\r\\n        \\/* Show logged out display *\\/\\r\\n        \\/* all set as placeholders in case user wants to move them elsewhere in template *\\/\\r\\n        $ph = array();\\r\\n        $ph[\'why_dialog_button\'] = $modx->getChunk($whyDialogTpl);\\r\\n        $ph[\'why_dialog_text\'] = $modx->getChunk($whyTextTpl);\\r\\n        $ph[\'privacy_dialog_button\'] = $modx->getChunk($privacyDialogTpl);\\r\\n        $ph[\'privacy_dialog_text\'] = $modx->getChunk($privacyTextTpl);\\r\\n\\r\\n        $modx->toPlaceholders($ph,\'sbs\', \'_\');\\r\\n\\r\\n        $output = $modx->getChunk($loggedOutDisplayTpl);\\r\\n    }\\r\\n}\\r\\n\\r\\nreturn $output;"}',
        'guid' => 'f1812f9e53c7a626ab2f79bda947ca99',
        'native_key' => 1,
        'signature' => 'd41700399030bf4bcd989d9fa5a82c6e',
      ),
      '94f7e79390dca7285545015be741b46c' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":2,"source":0,"property_preprocess":0,"name":"SubscribeForm","description":"Displays the Register form and the Manage Preferences form","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\r\\n * Subscribe\\r\\n * Copyright 2012 Bob Ray <http:\\/\\/bobsguides\\/com>\\r\\n *\\r\\n * Subscribe is free software; you can redistribute it and\\/or modify it\\r\\n * under the terms of the GNU General Public License as published by the Free\\r\\n * Software Foundation; either version 2 of the License, or (at your option) any\\r\\n * later version.\\r\\n *\\r\\n * Subscribe is distributed in the hope that it will be useful, but WITHOUT ANY\\r\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\r\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\r\\n *\\r\\n * You should have received a copy of the GNU General Public License along with\\r\\n * Subscribe; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\r\\n * Suite 330, Boston, MA 02111-1307 USA\\r\\n *\\r\\n * @package subscribe\\r\\n * @author Bob Ray <http:\\/\\/bobsguides\\/com>\\r\\n *\\r\\n * @version Version 1.0.0 Beta-1\\r\\n * 3\\/3\\/12\\r\\n *\\r\\n * @Description Display request to subscribe unless user is admin or logged in *\\/\\r\\n\\r\\n\\r\\n\\/**\\r\\n * @version Version 1.0.0 Beta-1\\r\\n * @package subscribe\\r\\n *\\/\\r\\n\\r\\n\\r\\n\\/* Display request to subscribe unless user is admin or logged in *\\/\\r\\n\\/* @var $modx modX *\\/\\r\\n\\/* @var $scriptProperties array *\\/\\r\\n\\r\\n\\/* Properties (note these should be set as System Settings)\\r\\n *\\r\\n *\\r\\n * &confirmRegisterPageId int (required) ID of ConfirmRegister resource\\r\\n *     default: empty\\r\\n *\\r\\n * &thankYouPageId int (required) ID of Thank You for Registering page\\r\\n *     default: empty\\r\\n *\\r\\n * &sbsCssPath string\\r\\n *      default: {assets_url}components\\/subscribe\\/css\\/\\r\\n *\\r\\n *  &sbsCssFile string\\r\\n *      default: subscribe.css\\r\\n *\\r\\n *  &sbsJsPath string\\r\\n *      default:  {assets_url}components\\/subscribe\\/js\\/\\r\\n *\\r\\n *  &sbsJsFile string\\r\\n *      default: subscribe.js\\r\\n *  &activationEmailTpl string Name of activation email Tpl chunk\\r\\n *      default: activatEmailTpl\\r\\n *\\r\\n * &whyDialogTpl string Tpl chunk for Why Subscribe dialog\\r\\n *      default: sbsWhyDialogTpl\\r\\n *\\r\\n * &whyDialogTextTpl string Tpl chunk for Why dialog text\\r\\n *      default: sbsWhyDialogTextTpl\\r\\n *\\r\\n * &privacyDialogTpl string Tpl chunk for Privacy dialog\\r\\n *      default: sbsPrivacyDialogTpl\\r\\n *\\r\\n * &privacyDialogTextTpl string Tpl chunk for Privacy dialog text\\r\\n *      default: sbsPrivacyDialogTextTpl\\r\\n * \\r\\n *  &language string language to use for buttons and messages\\r\\n *      default: en\\r\\n *\\r\\n * *\\/\\r\\n\\r\\n\\r\\n$sp =& $scriptProperties;\\r\\n\\/\\/return \'test\';\\r\\n\\/* don\'t allow manage preferences if user is not logged in *\\/\\r\\nif ($sp[\'form\'] == \'managePrefs\') {\\r\\n    if (!$modx->user->hasSessionContext($modx->context->get(\'key\'))) {\\r\\n        $modx->sendUnauthorizedPage();\\r\\n    }\\r\\n}\\r\\n$assetsUrl = $modx->getOption(\'subscribe.assets_url\', $sp, MODX_ASSETS_URL);\\r\\n$cssPath = $modx->getOption(\'sbsCssPath\',$sp, $assetsUrl  . \'\\/components\\/subscribe\\/css\\/\');\\r\\n$cssFile = $modx->getOption(\'sbsCssFile\', $sp, null);\\r\\n$cssFile = empty($cssFile) ? \'subscribe.css\' : $cssFile;\\r\\n\\/* load CSS file unless &sbsCssPath or &sbsCssFile is set to \'none\' *\\/\\r\\nif ($cssFile != \'none\') {\\r\\n    $modx->regClientCSS($cssPath . $cssFile);\\r\\n}\\r\\n\\r\\n\\/* load language strings *\\/\\r\\n$language = !empty($scriptProperties[\'language\'])\\r\\n    ? $scriptProperties[\'language\']\\r\\n    : $modx->getOption(\'cultureKey\', null, $modx->getOption(\'manager_language\', null, \'en\'));\\r\\n$language = empty($language) ? \'en\' : $language;\\r\\n$modx->lexicon->load($language . \':subscribe:forms\');\\r\\n\\r\\n$s = $modx->lexicon->fetch($prefix = \'sbs_js_\', $removePrefix = false);\\r\\n$sj = $modx->toJSON($s);\\r\\n$modx->setPlaceholder(\'sbs_lexicon_json\', $sj);\\r\\n\\r\\n\\/* load JS file *\\/\\r\\n\\r\\n$jsPath = $modx->getOption(\'sbsJsPath\',$sp, $assetsUrl . \'components\\/subscribe\\/js\\/\');\\r\\n$jsFile = $modx->getOption(\'sbsJsFile\', $sp, null);\\r\\n$jsFile = empty($jsFile) ? \'subscribe-min.js\' : $jsFile;\\r\\n\\r\\n$modx->regClientStartupScript($jsPath . $jsFile);\\r\\n\\r\\n$corePath = $modx->getOption(\'subscribe.core_path\',$sp,$modx->getOption(\'core_path\',null,MODX_CORE_PATH).\'components\\/subscribe\\/\');\\r\\nrequire_once($corePath . \'model\\/subscribe\\/checkboxes.class.php\');\\r\\n\\r\\n\\r\\n$output = \'\';\\r\\n$prefs = new CheckBoxes($modx, $sp);\\r\\nif (isset($_POST) && !empty($_POST) ) {\\r\\n    $prefs->cleanse($_POST);  \\/* sanitize $_POST *\\/\\r\\n}\\r\\n\\r\\nif (isset($hook) && ($sp[\'form\'] == \'register\')) {\\r\\n    \\/* We\'re acting as a register postHook - no display, definitely a repost *\\/\\r\\n    $prefs->init($hook->getValue(\'register.user\'), $hook->getValue(\'register.profile\'), true);\\r\\n    if (!$prefs->saveUserPrefs()) {\\r\\n        die(\'Failed to save prefs\');\\r\\n    }\\r\\n    $output = true;\\r\\n\\r\\n} elseif ($sp[\'form\'] == \'register\') {\\r\\n        \\/* Acting as Register form - not a repost *\\/\\r\\n        $profile = $modx->user->getOne(\'Profile\');\\r\\n        $prefs->init($modx->user, $profile);\\r\\n        $prefs->createDisplay(\'register\');\\r\\n        $modx->setPlaceholder(\'sbs_username\', $modx->user->get(\'username\'));\\r\\n\\r\\n} elseif ($sp[\'form\'] == \'managePrefs\') {\\r\\n    \\/* Acting as Manage Prefs form - may or may not be a repost *\\/\\r\\n\\r\\n    if (!$modx->user->hasSessionContext($modx->context->get(\'key\'))) {\\r\\n        return $modx->lexicon(\'sbs_not_logged_in_error_message\');\\r\\n    }\\r\\n\\r\\n    $prefs = new CheckBoxes($modx, $sp);\\r\\n    $profile = $modx->user->getOne(\'Profile\');\\r\\n    $prefs->init($modx->user, $profile, false, true);\\r\\n    $modx->setPlaceholder(\'sbs_username\', $modx->user->get(\'username\'));\\r\\n    $prefs->saveUserPrefs();\\r\\n\\r\\n    \\/* Check for Repost *\\/\\r\\n    if (isset($_POST[\'unsubscribe\']) && ($_POST[\'unsubscribe\'] == \'sbs_unsubscribe\')) {\\r\\n        if ($modx->user->get(\'username\') == \'(anonymous)\' || $modx->user->get(\'id\') == \'1\') {\\r\\n            $modx->setPlaceholder(\'sbs_error_message\', $modx->lexicon(\'sbs_anon_admin_error\'));\\r\\n        } else {\\r\\n            $modx->user->set(\'active\', \'0\');\\r\\n            if ($modx->user->save()) {\\r\\n                $modx->setPlaceholder(\'sbs_success_message\', $modx->lexicon(\'sbs_unsubscribe_success_message\'));\\r\\n            } else {\\r\\n                $modx->setPlaceholder(\'sbs_error_message\', $modx->lexicon(\'sbs_unsubscribe_failure_message\'));\\r\\n\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    $prefs->createDisplay(\'manage_prefs\');\\r\\n\\r\\n} else {\\r\\n        die(\'Unauthorized Access\');\\r\\n}\\r\\n\\r\\nreturn $output;","locked":0,"properties":"","moduleguid":"","static":0,"static_file":"","content":"\\/**\\r\\n * Subscribe\\r\\n * Copyright 2012 Bob Ray <http:\\/\\/bobsguides\\/com>\\r\\n *\\r\\n * Subscribe is free software; you can redistribute it and\\/or modify it\\r\\n * under the terms of the GNU General Public License as published by the Free\\r\\n * Software Foundation; either version 2 of the License, or (at your option) any\\r\\n * later version.\\r\\n *\\r\\n * Subscribe is distributed in the hope that it will be useful, but WITHOUT ANY\\r\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\r\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\r\\n *\\r\\n * You should have received a copy of the GNU General Public License along with\\r\\n * Subscribe; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\r\\n * Suite 330, Boston, MA 02111-1307 USA\\r\\n *\\r\\n * @package subscribe\\r\\n * @author Bob Ray <http:\\/\\/bobsguides\\/com>\\r\\n *\\r\\n * @version Version 1.0.0 Beta-1\\r\\n * 3\\/3\\/12\\r\\n *\\r\\n * @Description Display request to subscribe unless user is admin or logged in *\\/\\r\\n\\r\\n\\r\\n\\/**\\r\\n * @version Version 1.0.0 Beta-1\\r\\n * @package subscribe\\r\\n *\\/\\r\\n\\r\\n\\r\\n\\/* Display request to subscribe unless user is admin or logged in *\\/\\r\\n\\/* @var $modx modX *\\/\\r\\n\\/* @var $scriptProperties array *\\/\\r\\n\\r\\n\\/* Properties (note these should be set as System Settings)\\r\\n *\\r\\n *\\r\\n * &confirmRegisterPageId int (required) ID of ConfirmRegister resource\\r\\n *     default: empty\\r\\n *\\r\\n * &thankYouPageId int (required) ID of Thank You for Registering page\\r\\n *     default: empty\\r\\n *\\r\\n * &sbsCssPath string\\r\\n *      default: {assets_url}components\\/subscribe\\/css\\/\\r\\n *\\r\\n *  &sbsCssFile string\\r\\n *      default: subscribe.css\\r\\n *\\r\\n *  &sbsJsPath string\\r\\n *      default:  {assets_url}components\\/subscribe\\/js\\/\\r\\n *\\r\\n *  &sbsJsFile string\\r\\n *      default: subscribe.js\\r\\n *  &activationEmailTpl string Name of activation email Tpl chunk\\r\\n *      default: activatEmailTpl\\r\\n *\\r\\n * &whyDialogTpl string Tpl chunk for Why Subscribe dialog\\r\\n *      default: sbsWhyDialogTpl\\r\\n *\\r\\n * &whyDialogTextTpl string Tpl chunk for Why dialog text\\r\\n *      default: sbsWhyDialogTextTpl\\r\\n *\\r\\n * &privacyDialogTpl string Tpl chunk for Privacy dialog\\r\\n *      default: sbsPrivacyDialogTpl\\r\\n *\\r\\n * &privacyDialogTextTpl string Tpl chunk for Privacy dialog text\\r\\n *      default: sbsPrivacyDialogTextTpl\\r\\n * \\r\\n *  &language string language to use for buttons and messages\\r\\n *      default: en\\r\\n *\\r\\n * *\\/\\r\\n\\r\\n\\r\\n$sp =& $scriptProperties;\\r\\n\\/\\/return \'test\';\\r\\n\\/* don\'t allow manage preferences if user is not logged in *\\/\\r\\nif ($sp[\'form\'] == \'managePrefs\') {\\r\\n    if (!$modx->user->hasSessionContext($modx->context->get(\'key\'))) {\\r\\n        $modx->sendUnauthorizedPage();\\r\\n    }\\r\\n}\\r\\n$assetsUrl = $modx->getOption(\'subscribe.assets_url\', $sp, MODX_ASSETS_URL);\\r\\n$cssPath = $modx->getOption(\'sbsCssPath\',$sp, $assetsUrl  . \'\\/components\\/subscribe\\/css\\/\');\\r\\n$cssFile = $modx->getOption(\'sbsCssFile\', $sp, null);\\r\\n$cssFile = empty($cssFile) ? \'subscribe.css\' : $cssFile;\\r\\n\\/* load CSS file unless &sbsCssPath or &sbsCssFile is set to \'none\' *\\/\\r\\nif ($cssFile != \'none\') {\\r\\n    $modx->regClientCSS($cssPath . $cssFile);\\r\\n}\\r\\n\\r\\n\\/* load language strings *\\/\\r\\n$language = !empty($scriptProperties[\'language\'])\\r\\n    ? $scriptProperties[\'language\']\\r\\n    : $modx->getOption(\'cultureKey\', null, $modx->getOption(\'manager_language\', null, \'en\'));\\r\\n$language = empty($language) ? \'en\' : $language;\\r\\n$modx->lexicon->load($language . \':subscribe:forms\');\\r\\n\\r\\n$s = $modx->lexicon->fetch($prefix = \'sbs_js_\', $removePrefix = false);\\r\\n$sj = $modx->toJSON($s);\\r\\n$modx->setPlaceholder(\'sbs_lexicon_json\', $sj);\\r\\n\\r\\n\\/* load JS file *\\/\\r\\n\\r\\n$jsPath = $modx->getOption(\'sbsJsPath\',$sp, $assetsUrl . \'components\\/subscribe\\/js\\/\');\\r\\n$jsFile = $modx->getOption(\'sbsJsFile\', $sp, null);\\r\\n$jsFile = empty($jsFile) ? \'subscribe-min.js\' : $jsFile;\\r\\n\\r\\n$modx->regClientStartupScript($jsPath . $jsFile);\\r\\n\\r\\n$corePath = $modx->getOption(\'subscribe.core_path\',$sp,$modx->getOption(\'core_path\',null,MODX_CORE_PATH).\'components\\/subscribe\\/\');\\r\\nrequire_once($corePath . \'model\\/subscribe\\/checkboxes.class.php\');\\r\\n\\r\\n\\r\\n$output = \'\';\\r\\n$prefs = new CheckBoxes($modx, $sp);\\r\\nif (isset($_POST) && !empty($_POST) ) {\\r\\n    $prefs->cleanse($_POST);  \\/* sanitize $_POST *\\/\\r\\n}\\r\\n\\r\\nif (isset($hook) && ($sp[\'form\'] == \'register\')) {\\r\\n    \\/* We\'re acting as a register postHook - no display, definitely a repost *\\/\\r\\n    $prefs->init($hook->getValue(\'register.user\'), $hook->getValue(\'register.profile\'), true);\\r\\n    if (!$prefs->saveUserPrefs()) {\\r\\n        die(\'Failed to save prefs\');\\r\\n    }\\r\\n    $output = true;\\r\\n\\r\\n} elseif ($sp[\'form\'] == \'register\') {\\r\\n        \\/* Acting as Register form - not a repost *\\/\\r\\n        $profile = $modx->user->getOne(\'Profile\');\\r\\n        $prefs->init($modx->user, $profile);\\r\\n        $prefs->createDisplay(\'register\');\\r\\n        $modx->setPlaceholder(\'sbs_username\', $modx->user->get(\'username\'));\\r\\n\\r\\n} elseif ($sp[\'form\'] == \'managePrefs\') {\\r\\n    \\/* Acting as Manage Prefs form - may or may not be a repost *\\/\\r\\n\\r\\n    if (!$modx->user->hasSessionContext($modx->context->get(\'key\'))) {\\r\\n        return $modx->lexicon(\'sbs_not_logged_in_error_message\');\\r\\n    }\\r\\n\\r\\n    $prefs = new CheckBoxes($modx, $sp);\\r\\n    $profile = $modx->user->getOne(\'Profile\');\\r\\n    $prefs->init($modx->user, $profile, false, true);\\r\\n    $modx->setPlaceholder(\'sbs_username\', $modx->user->get(\'username\'));\\r\\n    $prefs->saveUserPrefs();\\r\\n\\r\\n    \\/* Check for Repost *\\/\\r\\n    if (isset($_POST[\'unsubscribe\']) && ($_POST[\'unsubscribe\'] == \'sbs_unsubscribe\')) {\\r\\n        if ($modx->user->get(\'username\') == \'(anonymous)\' || $modx->user->get(\'id\') == \'1\') {\\r\\n            $modx->setPlaceholder(\'sbs_error_message\', $modx->lexicon(\'sbs_anon_admin_error\'));\\r\\n        } else {\\r\\n            $modx->user->set(\'active\', \'0\');\\r\\n            if ($modx->user->save()) {\\r\\n                $modx->setPlaceholder(\'sbs_success_message\', $modx->lexicon(\'sbs_unsubscribe_success_message\'));\\r\\n            } else {\\r\\n                $modx->setPlaceholder(\'sbs_error_message\', $modx->lexicon(\'sbs_unsubscribe_failure_message\'));\\r\\n\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    $prefs->createDisplay(\'manage_prefs\');\\r\\n\\r\\n} else {\\r\\n        die(\'Unauthorized Access\');\\r\\n}\\r\\n\\r\\nreturn $output;"}',
        'guid' => 'da2b5fe32043adead836d4088a93375b',
        'native_key' => 2,
        'signature' => '37e0b0879a2874755834562f382555f9',
      ),
      '3db202a47a44deab3cadf810e1072e8c' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":3,"source":0,"property_preprocess":0,"name":"Unsubscribe","description":"Processes Unsubscribe requests","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Subscribe\\n * Copyright 2012-2013 Bob Ray <http:\\/\\/bobsguides\\/com>\\n *\\n * Subscribe is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * Subscribe is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Subscribe; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package subscribe\\n * @author Bob Ray <http:\\/\\/bobsguides\\/com>\\n *\\n * @version Version 1.0.0 Beta-1\\n * 3\\/3\\/12\\n *\\n * @Description Display request to subscribe unless user is admin or logged in\\n *\\/\\n\\n\\n\\/**\\n * @package subscribe\\n *\\n * Description: Authenticates user based on $_GET params and\\n * forwards authenticated users to Manage Prefs page\\n *\\/\\n\\n\\/* @var $modx modX *\\/\\n\\/* @var $scriptProperties array *\\/\\n\\n\\/* Properties\\n *\\n * &sbsUserNotFoundTpl string - name of chunk to show users if not found in DB;\\n * default: sbsusernotfoundtpl\\n *\\n * &sbsContexts string - comma-separated list of contexts to log the user in to;\\n * default: context of Unsubscribe Resource (usually \'web\').\\n *\\n * *\\/\\n\\n\\n$sp =& $scriptProperties;\\n\\n$corePath = $modx->getOption(\'subscribe.core_path\', null, $modx->getOption(\'core_path\', null, MODX_CORE_PATH) . \'components\\/subscribe\\/\');\\nrequire_once($corePath . \'model\\/subscribe\\/unsubscribe.class.php\');\\n\\n$tpl = $modx->getOption(\'sbsUserNotFoundTpl\', $sp, \'sbsusernotfoundtpl\');\\n\\n$unSub = new Unsubscribe($modx, $sp);\\n$unSub->init();\\n$managePrefsId = $modx->getOption(\'sbs_manage_prefs_page_id\', null, null);\\n\\n$url = $modx->makeUrl($managePrefsId, \\"\\", \\"\\", \\"full\\");\\n$encodedEmail = $_GET[\'ue\'];\\n$key = rawurlencode($_GET[\'uk\']);\\n\\nif (empty ($encodedEmail) || empty($key)) {\\n    $modx->sendUnauthorizedPage();\\n}\\n\\n$userData = $unSub->getUserData($encodedEmail, $key);\\n\\nif (!empty ($userData)) {\\n    \\/* @var $user modUser *\\/\\n    $user = $userData[\'user\'];\\n    $usr = $modx->getObject(\'modUser\', $user->get(\'id\'));\\n    $modx->user =& $usr;\\n    $modx->getUser();\\n    $contexts = $modx->getOption(\'sbsContexts\', $sp, $modx->context->get(\'key\'));\\n    $contexts = explode(\',\', $contexts);\\n    foreach ($contexts as $ctx) {\\n        $modx->user->addSessionContext($ctx);\\n    }\\n    $modx->sendRedirect($url);\\n} else {\\n    return $modx->getChunk($tpl);\\n}","locked":0,"properties":"","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Subscribe\\n * Copyright 2012-2013 Bob Ray <http:\\/\\/bobsguides\\/com>\\n *\\n * Subscribe is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * Subscribe is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Subscribe; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package subscribe\\n * @author Bob Ray <http:\\/\\/bobsguides\\/com>\\n *\\n * @version Version 1.0.0 Beta-1\\n * 3\\/3\\/12\\n *\\n * @Description Display request to subscribe unless user is admin or logged in\\n *\\/\\n\\n\\n\\/**\\n * @package subscribe\\n *\\n * Description: Authenticates user based on $_GET params and\\n * forwards authenticated users to Manage Prefs page\\n *\\/\\n\\n\\/* @var $modx modX *\\/\\n\\/* @var $scriptProperties array *\\/\\n\\n\\/* Properties\\n *\\n * &sbsUserNotFoundTpl string - name of chunk to show users if not found in DB;\\n * default: sbsusernotfoundtpl\\n *\\n * &sbsContexts string - comma-separated list of contexts to log the user in to;\\n * default: context of Unsubscribe Resource (usually \'web\').\\n *\\n * *\\/\\n\\n\\n$sp =& $scriptProperties;\\n\\n$corePath = $modx->getOption(\'subscribe.core_path\', null, $modx->getOption(\'core_path\', null, MODX_CORE_PATH) . \'components\\/subscribe\\/\');\\nrequire_once($corePath . \'model\\/subscribe\\/unsubscribe.class.php\');\\n\\n$tpl = $modx->getOption(\'sbsUserNotFoundTpl\', $sp, \'sbsusernotfoundtpl\');\\n\\n$unSub = new Unsubscribe($modx, $sp);\\n$unSub->init();\\n$managePrefsId = $modx->getOption(\'sbs_manage_prefs_page_id\', null, null);\\n\\n$url = $modx->makeUrl($managePrefsId, \\"\\", \\"\\", \\"full\\");\\n$encodedEmail = $_GET[\'ue\'];\\n$key = rawurlencode($_GET[\'uk\']);\\n\\nif (empty ($encodedEmail) || empty($key)) {\\n    $modx->sendUnauthorizedPage();\\n}\\n\\n$userData = $unSub->getUserData($encodedEmail, $key);\\n\\nif (!empty ($userData)) {\\n    \\/* @var $user modUser *\\/\\n    $user = $userData[\'user\'];\\n    $usr = $modx->getObject(\'modUser\', $user->get(\'id\'));\\n    $modx->user =& $usr;\\n    $modx->getUser();\\n    $contexts = $modx->getOption(\'sbsContexts\', $sp, $modx->context->get(\'key\'));\\n    $contexts = explode(\',\', $contexts);\\n    foreach ($contexts as $ctx) {\\n        $modx->user->addSessionContext($ctx);\\n    }\\n    $modx->sendRedirect($url);\\n} else {\\n    return $modx->getChunk($tpl);\\n}"}',
        'guid' => '08e8f65cdd963e9b0b377e9b70d8f4bb',
        'native_key' => 3,
        'signature' => '78c0fbb5441c3285db2294ef0c8a473d',
      ),
      '0ebf22741b9ff5124eb9de32491f970f' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":4,"source":0,"property_preprocess":0,"name":"InterestReport","description":"Displays a table showing the user-count for interest and (optionally) groups","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/* @var $modx modX *\\/\\n\\n\\/**\\n * Gets options from a standard MODX option string in a chunk and returns them as an array, e.g.,\\n * Option1==Option One||Option2==Option Two\\n * @param $tpl string - Options string from Tpl\\n * @return array\\n *\\/\\nfunction parseOptions($chunk) {\\n    $options = array();\\n\\n    if (!empty($chunk)) {\\n        $tempArray = explode(\'||\', $chunk);\\n        foreach ($tempArray as $option) {\\n            $couple = explode(\'==\', $option);\\n            $options[trim($couple[0])] = trim($couple[\'1\']);\\n        }\\n    }\\n    return $options;\\n}\\n\\n$output = \'\';\\n$props =& $scriptProperties;\\n\\n\\/* load language strings *\\/\\n$language = !empty($scriptProperties[\'language\'])\\n    ? $scriptProperties[\'language\']\\n    : $modx->getOption(\'cultureKey\', $props, $modx->getOption(\'manager_language\', null, \'en\'));\\n$language = empty($language)\\n    ? \'en\'\\n    : $language;\\n$modx->lexicon->load($language . \':subscribe:default\');\\n\\n\\n$output .= \'<h3>\' . $modx->lexicon(\'sbs_total_users_header\') . \': \' . $modx->getCount(\'modUser\', array(\'active\' => \'1\')) . \'<\\/h3>\';\\n\\n$users = $modx->getIterator(\'modUser\', array(\'active\' => \'1\'));\\n\\n\\n$showInterests = $modx->getOption(\'sbs_show_interests\', $props, true);\\n$showGroups = $modx->getOption(\'sbs_show_groups\', $props, false);\\n\\n\\nif ($showInterests) {\\n    $chunkName = $modx->getOption(\'prefListTpl\', $props, \'sbsPrefListTpl\');\\n    $tpl = $modx->getChunk($chunkName);\\n    $possibleInterests = array();\\n    if (empty($tpl)) {\\n        return $modx->lexicon(\'sbs_no_interest_tpl_error\');\\n    } else {\\n        $possibleInterests = parseOptions($tpl);\\n    }\\n\\n    $useCommentField = $modx->getOption(\'sbs_use_comment_field\', $props, true);\\n    $extendedField = $modx->getOption(\'sbs_extended_field\', $props, \'interests\');\\n    $output .= \'<h3>\' . $modx->lexicon(\'sbs_interests_section_header\') . \'<\\/h3>\';\\n    $results = array();\\n    foreach ($possibleInterests as $caption => $key) {\\n        $results[$caption] = 0;\\n    }\\n\\n    foreach ($users as $user) {\\n        \\/* @var $user modUser *\\/\\n        $profile = $user->getOne(\'Profile\');\\n        if ($useCommentField) {\\n            $interests = $profile->get(\'comment\');\\n        } else {\\n            $extended = $profile->get(\'extended\');\\n            $interests = $extended[$extendedField];\\n        }\\n\\n        if (!empty($interests)) {\\n\\n            $userInterests = explode(\',\', $interests);\\n            foreach($possibleInterests as $caption => $key) {\\n                if (in_array($key, $userInterests)) {\\n                    $results[$caption] = $results[$caption] + 1;\\n                }\\n            }\\n        }\\n    }\\n    $output .= \\"\\\\n\\" . \'<table border=\\"2\\" cellpadding=\\"10px\\" bgcolor=\\"#eeeeee\\">\' . \\"\\\\n\\";\\n    $output .= \\"\\\\n    <tr><th>\\" .  $modx->lexicon(\'sbs_topic_header\') . \'<\\/th><th>\' . $modx->lexicon(\'sbs_user_count_header\') .  \'<\\/th><\\/tr>\';\\n    foreach($results as $cap => $total) {\\n        $output .= \\"\\\\n    <tr><td>$cap<\\/td><td>$total<\\/td><\\/tr>\\";\\n\\n    }\\n    $output .= \\"\\\\n<\\/table>\\\\n\\";\\n\\n\\n}\\n\\nif ($showGroups) {\\n    reset($users);\\n    $chunkName = $modx->getOption(\'groupListTpl\', $props, \'sbsGroupListTpl\');\\n    $tpl = $modx->getChunk($chunkName);\\n    $possibleGroups = array();\\n    if (empty($tpl)) {\\n        $possibleGroups[\'Subscribers\'] = \'Subscribers\' ;\\n    } else {\\n        $possibleGroups = parseOptions($tpl);\\n    }\\n    $results = array();\\n    foreach ($possibleGroups as $caption => $key) {\\n        $results[$caption] = 0;\\n    }\\n    $output .= \'<br \\/><br \\/><h3>\' . $modx->lexicon(\'sbs_groups_section_header\') . \'<\\/h3>\';\\n\\n    foreach($users as $user) {\\n        foreach ($possibleGroups as $caption => $key) {\\n            if ($user->isMember($key)) {\\n                $results[$caption] = $results[$caption] + 1;\\n            }\\n        }\\n    }\\n    $output .= \\"\\\\n\\" . \'<table border=\\"2\\" cellpadding=\\"10px\\" bgcolor=\\"#eeeeee\\">\' . \\"\\\\n\\";\\n    $output .= \\"\\\\n    <tr><th>\\" . $modx->lexicon(\'sbs_group_header\') . \'<\\/th><th>\' . $modx->lexicon(\'sbs_user_count_header\') . \'<\\/th><\\/tr>\';\\n    foreach ($results as $cap => $total) {\\n        $output .= \\"\\\\n    <tr><td>$cap<\\/td><td>$total<\\/td><\\/tr>\\";\\n\\n    }\\n    $output .= \\"\\\\n<\\/table>\\\\n\\";\\n\\n    $output .= \'<br \\/><br \\/>\';\\n\\n\\n}\\n\\nreturn $output;","locked":0,"properties":"","moduleguid":"","static":0,"static_file":"","content":"\\/* @var $modx modX *\\/\\n\\n\\/**\\n * Gets options from a standard MODX option string in a chunk and returns them as an array, e.g.,\\n * Option1==Option One||Option2==Option Two\\n * @param $tpl string - Options string from Tpl\\n * @return array\\n *\\/\\nfunction parseOptions($chunk) {\\n    $options = array();\\n\\n    if (!empty($chunk)) {\\n        $tempArray = explode(\'||\', $chunk);\\n        foreach ($tempArray as $option) {\\n            $couple = explode(\'==\', $option);\\n            $options[trim($couple[0])] = trim($couple[\'1\']);\\n        }\\n    }\\n    return $options;\\n}\\n\\n$output = \'\';\\n$props =& $scriptProperties;\\n\\n\\/* load language strings *\\/\\n$language = !empty($scriptProperties[\'language\'])\\n    ? $scriptProperties[\'language\']\\n    : $modx->getOption(\'cultureKey\', $props, $modx->getOption(\'manager_language\', null, \'en\'));\\n$language = empty($language)\\n    ? \'en\'\\n    : $language;\\n$modx->lexicon->load($language . \':subscribe:default\');\\n\\n\\n$output .= \'<h3>\' . $modx->lexicon(\'sbs_total_users_header\') . \': \' . $modx->getCount(\'modUser\', array(\'active\' => \'1\')) . \'<\\/h3>\';\\n\\n$users = $modx->getIterator(\'modUser\', array(\'active\' => \'1\'));\\n\\n\\n$showInterests = $modx->getOption(\'sbs_show_interests\', $props, true);\\n$showGroups = $modx->getOption(\'sbs_show_groups\', $props, false);\\n\\n\\nif ($showInterests) {\\n    $chunkName = $modx->getOption(\'prefListTpl\', $props, \'sbsPrefListTpl\');\\n    $tpl = $modx->getChunk($chunkName);\\n    $possibleInterests = array();\\n    if (empty($tpl)) {\\n        return $modx->lexicon(\'sbs_no_interest_tpl_error\');\\n    } else {\\n        $possibleInterests = parseOptions($tpl);\\n    }\\n\\n    $useCommentField = $modx->getOption(\'sbs_use_comment_field\', $props, true);\\n    $extendedField = $modx->getOption(\'sbs_extended_field\', $props, \'interests\');\\n    $output .= \'<h3>\' . $modx->lexicon(\'sbs_interests_section_header\') . \'<\\/h3>\';\\n    $results = array();\\n    foreach ($possibleInterests as $caption => $key) {\\n        $results[$caption] = 0;\\n    }\\n\\n    foreach ($users as $user) {\\n        \\/* @var $user modUser *\\/\\n        $profile = $user->getOne(\'Profile\');\\n        if ($useCommentField) {\\n            $interests = $profile->get(\'comment\');\\n        } else {\\n            $extended = $profile->get(\'extended\');\\n            $interests = $extended[$extendedField];\\n        }\\n\\n        if (!empty($interests)) {\\n\\n            $userInterests = explode(\',\', $interests);\\n            foreach($possibleInterests as $caption => $key) {\\n                if (in_array($key, $userInterests)) {\\n                    $results[$caption] = $results[$caption] + 1;\\n                }\\n            }\\n        }\\n    }\\n    $output .= \\"\\\\n\\" . \'<table border=\\"2\\" cellpadding=\\"10px\\" bgcolor=\\"#eeeeee\\">\' . \\"\\\\n\\";\\n    $output .= \\"\\\\n    <tr><th>\\" .  $modx->lexicon(\'sbs_topic_header\') . \'<\\/th><th>\' . $modx->lexicon(\'sbs_user_count_header\') .  \'<\\/th><\\/tr>\';\\n    foreach($results as $cap => $total) {\\n        $output .= \\"\\\\n    <tr><td>$cap<\\/td><td>$total<\\/td><\\/tr>\\";\\n\\n    }\\n    $output .= \\"\\\\n<\\/table>\\\\n\\";\\n\\n\\n}\\n\\nif ($showGroups) {\\n    reset($users);\\n    $chunkName = $modx->getOption(\'groupListTpl\', $props, \'sbsGroupListTpl\');\\n    $tpl = $modx->getChunk($chunkName);\\n    $possibleGroups = array();\\n    if (empty($tpl)) {\\n        $possibleGroups[\'Subscribers\'] = \'Subscribers\' ;\\n    } else {\\n        $possibleGroups = parseOptions($tpl);\\n    }\\n    $results = array();\\n    foreach ($possibleGroups as $caption => $key) {\\n        $results[$caption] = 0;\\n    }\\n    $output .= \'<br \\/><br \\/><h3>\' . $modx->lexicon(\'sbs_groups_section_header\') . \'<\\/h3>\';\\n\\n    foreach($users as $user) {\\n        foreach ($possibleGroups as $caption => $key) {\\n            if ($user->isMember($key)) {\\n                $results[$caption] = $results[$caption] + 1;\\n            }\\n        }\\n    }\\n    $output .= \\"\\\\n\\" . \'<table border=\\"2\\" cellpadding=\\"10px\\" bgcolor=\\"#eeeeee\\">\' . \\"\\\\n\\";\\n    $output .= \\"\\\\n    <tr><th>\\" . $modx->lexicon(\'sbs_group_header\') . \'<\\/th><th>\' . $modx->lexicon(\'sbs_user_count_header\') . \'<\\/th><\\/tr>\';\\n    foreach ($results as $cap => $total) {\\n        $output .= \\"\\\\n    <tr><td>$cap<\\/td><td>$total<\\/td><\\/tr>\\";\\n\\n    }\\n    $output .= \\"\\\\n<\\/table>\\\\n\\";\\n\\n    $output .= \'<br \\/><br \\/>\';\\n\\n\\n}\\n\\nreturn $output;"}',
        'guid' => 'c9c4e32c6265ec0ccf30ef406b2aaaa8',
        'native_key' => 4,
        'signature' => '5dad0d1f82f1448f23f4ba7adf80baac',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
  ),
  'namespace' => 'subscribe',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"subscribe-1.2.1-pl\\/modCategory\\/90129c960e3a8037d4c54b40e09344f8\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"subscribe"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"subscribe-1.2.1-pl\\/modCategory\\/90129c960e3a8037d4c54b40e09344f8\\/1\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"subscribe"}',
    ),
    2 => 
    array (
      'type' => 'php',
      'body' => '{"source":"subscribe-1.2.1-pl\\/modCategory\\/90129c960e3a8037d4c54b40e09344f8.install.script.resolver","type":"php","name":"install.script"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '1548729df03e1e00f5607c12c303ee81',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '90129c960e3a8037d4c54b40e09344f8',
  'native_key' => 1,
  'object' => '{"id":1,"parent":0,"category":"Subscribe"}',
);